from QuantumFunctions import quantumwalk
import matplotlib.pyplot as plt
import numpy as np
#Function 'quantumwalk(steps, decoherence type, decoherence value, return type)
#Steps: 50 (Default)
#Decoherence Type: 'n' (none)(Default), 'c' (coin), 'p' (position), 'cp' (coin and position), 'H' (Hadamard) 
#Decoherence Value: 0 (Default)
#Return Type: 'p' (plot)(Default), 's' (system), 'm' (measurement), 'v' (variance), #'a' (animation)

result= []
result1 = []
result2 = []
decoherences_list = []
decoherences = 10

for j in range(decoherences+1):
    decoherence = 1 - np.log(1+(np.e-1)*j/decoherences)
    decoherences_list.append(decoherence)
    result.append(quantumwalk(50,'c', decoherence, 'v'))
    result1.append(quantumwalk(50,'p', decoherence, 'v'))
    result2.append(quantumwalk(50,'cp', decoherence, 'v'))

plt.plot(decoherences_list,result)
plt.plot(decoherences_list,result1)
plt.plot(decoherences_list,result2)


